{"md5_bytecode": "e38381544b1ddf6bdfcedc7125c4024a", "function_debug_info": {"fun_checkOwner": {"id": 54, "entryPoint": 2918, "returnSlots": 0, "parameterSlots": 0}, "increment_uint256": {"id": null, "entryPoint": 3006, "returnSlots": 1, "parameterSlots": 1}, "abi_decode_address": {"id": null, "entryPoint": 2898, "returnSlots": 1, "parameterSlots": 1}, "finalize_allocation": {"id": null, "entryPoint": 3041, "returnSlots": 0, "parameterSlots": 2}, "abi_decode_address_9451": {"id": null, "entryPoint": 2854, "returnSlots": 1, "parameterSlots": 0}, "abi_decode_address_9453": {"id": null, "entryPoint": 2876, "returnSlots": 1, "parameterSlots": 0}, "abi_encode_array_address_dyn_calldata": {"id": null, "entryPoint": 3199, "returnSlots": 1, "parameterSlots": 3}, "memory_array_index_access_uint256_dyn": {"id": null, "entryPoint": 3267, "returnSlots": 1, "parameterSlots": 2}, "abi_decode_array_uint256_dyn_fromMemory": {"id": null, "entryPoint": 3075, "returnSlots": 1, "parameterSlots": 2}, "read_from_calldatat_contract_ISwapRouter": {"id": null, "entryPoint": 3021, "returnSlots": 1, "parameterSlots": 1}, "abi_decode_array_contract_ISwapRouter_dyn_calldata": {"id": null, "entryPoint": 2768, "returnSlots": 2, "parameterSlots": 2}, "storage_array_index_access_contract_ISwapRouter_dyn": {"id": null, "entryPoint": 2817, "returnSlots": 2, "parameterSlots": 1}}, "immutable_references": {"348": [{"start": 1964, "length": 32}], "350": [{"start": 224, "length": 32}, {"start": 2207, "length": 32}]}, "abi": [{"type": "constructor", "inputs": [{"name": "_HOPE", "type": "address", "internalType": "contract IERC20"}, {"name": "_feeVault", "type": "address", "internalType": "address"}], "stateMutability": "nonpayable"}, {"name": "OwnershipTransferStarted", "type": "event", "inputs": [{"name": "previousOwner", "type": "address", "indexed": true, "internalType": "address"}, {"name": "newOwner", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "OwnershipTransferred", "type": "event", "inputs": [{"name": "previousOwner", "type": "address", "indexed": true, "internalType": "address"}, {"name": "newOwner", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "SetRouters", "type": "event", "inputs": [{"name": "_routers", "type": "address[]", "indexed": false, "internalType": "contract ISwapRouter[]"}], "anonymous": false}, {"name": "HOPE", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "contract IERC20"}], "stateMutability": "view"}, {"name": "acceptOwnership", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "approved", "type": "function", "inputs": [{"name": "", "type": "address", "internalType": "contract ISwapRouter"}, {"name": "", "type": "address", "internalType": "address"}], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "burn", "type": "function", "inputs": [{"name": "to", "type": "address", "internalType": "address"}, {"name": "token", "type": "address", "internalType": "address"}, {"name": "amount", "type": "uint256", "internalType": "uint256"}, {"name": "amountOutMin", "type": "uint256", "internalType": "uint256"}, {"name": "path", "type": "address[]", "internalType": "address[]"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "feeVault", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "owner", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "pendingOwner", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "renounceOwnership", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "routers", "type": "function", "inputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "address", "internalType": "contract ISwapRouter"}], "stateMutability": "view"}, {"name": "setRouters", "type": "function", "inputs": [{"name": "_routers", "type": "address[]", "internalType": "contract ISwapRouter[]"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "transferOwnership", "type": "function", "inputs": [{"name": "newOwner", "type": "address", "internalType": "address"}], "outputs": [], "stateMutability": "nonpayable"}], "storage_layout": {"types": {"t_bool": {"label": "bool", "encoding": "inplace", "numberOfBytes": "1"}, "t_address": {"label": "address", "encoding": "inplace", "numberOfBytes": "20"}, "t_contract(ISwapRouter)331": {"label": "contract ISwapRouter", "encoding": "inplace", "numberOfBytes": "20"}, "t_mapping(t_address,t_bool)": {"key": "t_address", "label": "mapping(address => bool)", "value": "t_bool", "encoding": "mapping", "numberOfBytes": "32"}, "t_array(t_contract(ISwapRouter)331)dyn_storage": {"base": "t_contract(ISwapRouter)331", "label": "contract ISwapRouter[]", "encoding": "dynamic_array", "numberOfBytes": "32"}, "t_mapping(t_contract(ISwapRouter)331,t_mapping(t_address,t_bool))": {"key": "t_contract(ISwapRouter)331", "label": "mapping(contract ISwapRouter => mapping(address => bool))", "value": "t_mapping(t_address,t_bool)", "encoding": "mapping", "numberOfBytes": "32"}}, "storage": [{"slot": "0", "type": "t_address", "astId": 7, "label": "_owner", "offset": 0, "contract": "contracts/feeDistributor/feeToVault/SwapBurner.sol:SwapBurner"}, {"slot": "1", "type": "t_address", "astId": 120, "label": "_pendingOwner", "offset": 0, "contract": "contracts/feeDistributor/feeToVault/SwapBurner.sol:SwapBurner"}, {"slot": "2", "type": "t_array(t_contract(ISwapRouter)331)dyn_storage", "astId": 345, "label": "routers", "offset": 0, "contract": "contracts/feeDistributor/feeToVault/SwapBurner.sol:SwapBurner"}, {"slot": "3", "type": "t_mapping(t_contract(ISwapRouter)331,t_mapping(t_address,t_bool))", "astId": 357, "label": "approved", "offset": 0, "contract": "contracts/feeDistributor/feeToVault/SwapBurner.sol:SwapBurner"}]}}