{"md5_bytecode": "13b8d320a8022b3ead094dc7bd8865f8", "function_debug_info": {}, "immutable_references": {}, "abi": [{"type": "constructor", "inputs": [{"name": "addressProvider", "type": "address", "internalType": "address"}], "stateMutability": "nonpayable"}, {"name": "AccountMinerChanged", "type": "event", "inputs": [{"name": "miner", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "InitializeCreditAccount", "type": "event", "inputs": [{"name": "account", "type": "address", "indexed": true, "internalType": "address"}, {"name": "creditManager", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "NewCreditAccount", "type": "event", "inputs": [{"name": "account", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "Paused", "type": "event", "inputs": [{"name": "account", "type": "address", "indexed": false, "internalType": "address"}], "anonymous": false}, {"name": "ReturnCreditAccount", "type": "event", "inputs": [{"name": "account", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "TakeForever", "type": "event", "inputs": [{"name": "creditAccount", "type": "address", "indexed": true, "internalType": "address"}, {"name": "to", "type": "address", "indexed": true, "internalType": "address"}], "anonymous": false}, {"name": "Unpaused", "type": "event", "inputs": [{"name": "account", "type": "address", "indexed": false, "internalType": "address"}], "anonymous": false}, {"name": "_contractsRegister", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "contract ContractsRegister"}], "stateMutability": "view"}, {"name": "addCreditAccount", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "addMiningApprovals", "type": "function", "inputs": [{"name": "_miningApprovals", "type": "tuple[]", "components": [{"name": "token", "type": "address", "internalType": "address"}, {"name": "swapContract", "type": "address", "internalType": "address"}], "internalType": "struct DataTypes.MiningApproval[]"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "cancelAllowance", "type": "function", "inputs": [{"name": "account", "type": "address", "internalType": "address"}, {"name": "token", "type": "address", "internalType": "address"}, {"name": "targetContract", "type": "address", "internalType": "address"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "countCreditAccounts", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "countCreditAccountsInStock", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}, {"name": "creditAccounts", "type": "function", "inputs": [{"name": "id", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "finishMining", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "getNext", "type": "function", "inputs": [{"name": "creditAccount", "type": "address", "internalType": "address"}], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "head", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "isCreditAccount", "type": "function", "inputs": [{"name": "addr", "type": "address", "internalType": "address"}], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "isMiningFinished", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "masterCreditAccount", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "mineCreditAccount", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "miningApprovals", "type": "function", "inputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "token", "type": "address", "internalType": "address"}, {"name": "swapContract", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "pause", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "paused", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "bool", "internalType": "bool"}], "stateMutability": "view"}, {"name": "returnCreditAccount", "type": "function", "inputs": [{"name": "usedAccount", "type": "address", "internalType": "address"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "tail", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "view"}, {"name": "takeCreditAccount", "type": "function", "inputs": [{"name": "_borrowedAmount", "type": "uint256", "internalType": "uint256"}, {"name": "_cumulativeIndexAtOpen", "type": "uint256", "internalType": "uint256"}], "outputs": [{"name": "", "type": "address", "internalType": "address"}], "stateMutability": "nonpayable"}, {"name": "takeOut", "type": "function", "inputs": [{"name": "prev", "type": "address", "internalType": "address"}, {"name": "creditAccount", "type": "address", "internalType": "address"}, {"name": "to", "type": "address", "internalType": "address"}], "outputs": [], "stateMutability": "nonpayable"}, {"name": "unpause", "type": "function", "inputs": [], "outputs": [], "stateMutability": "nonpayable"}, {"name": "version", "type": "function", "inputs": [], "outputs": [{"name": "", "type": "uint256", "internalType": "uint256"}], "stateMutability": "view"}], "storage_layout": {"types": {"t_bool": {"label": "bool", "encoding": "inplace", "numberOfBytes": "1"}, "t_address": {"label": "address", "encoding": "inplace", "numberOfBytes": "20"}, "t_bytes32": {"label": "bytes32", "encoding": "inplace", "numberOfBytes": "32"}, "t_uint256": {"label": "uint256", "encoding": "inplace", "numberOfBytes": "32"}, "t_contract(ACL)1997": {"label": "contract ACL", "encoding": "inplace", "numberOfBytes": "20"}, "t_struct(Set)1231_storage": {"label": "struct EnumerableSet.Set", "members": [{"slot": "0", "type": "t_array(t_bytes32)dyn_storage", "astId": 1226, "label": "_values", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "1", "type": "t_mapping(t_bytes32,t_uint256)", "astId": 1230, "label": "_indexes", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}], "encoding": "inplace", "numberOfBytes": "64"}, "t_array(t_bytes32)dyn_storage": {"base": "t_bytes32", "label": "bytes32[]", "encoding": "dynamic_array", "numberOfBytes": "32"}, "t_mapping(t_address,t_address)": {"key": "t_address", "label": "mapping(address => address)", "value": "t_address", "encoding": "mapping", "numberOfBytes": "32"}, "t_mapping(t_bytes32,t_uint256)": {"key": "t_bytes32", "label": "mapping(bytes32 => uint256)", "value": "t_uint256", "encoding": "mapping", "numberOfBytes": "32"}, "t_struct(AddressSet)1496_storage": {"label": "struct EnumerableSet.AddressSet", "members": [{"slot": "0", "type": "t_struct(Set)1231_storage", "astId": 1495, "label": "_inner", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}], "encoding": "inplace", "numberOfBytes": "64"}, "t_contract(ContractsRegister)3299": {"label": "contract ContractsRegister", "encoding": "inplace", "numberOfBytes": "20"}, "t_struct(MiningApproval)4565_storage": {"label": "struct DataTypes.MiningApproval", "members": [{"slot": "0", "type": "t_address", "astId": 4562, "label": "token", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "1", "type": "t_address", "astId": 4564, "label": "swapContract", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}], "encoding": "inplace", "numberOfBytes": "64"}, "t_array(t_struct(MiningApproval)4565_storage)dyn_storage": {"base": "t_struct(MiningApproval)4565_storage", "label": "struct DataTypes.MiningApproval[]", "encoding": "dynamic_array", "numberOfBytes": "32"}}, "storage": [{"slot": "0", "type": "t_bool", "astId": 1730, "label": "_paused", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "0", "type": "t_contract(ACL)1997", "astId": 2012, "label": "_acl", "offset": 1, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "1", "type": "t_uint256", "astId": 1815, "label": "_status", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "2", "type": "t_mapping(t_address,t_address)", "astId": 2137, "label": "_nextCreditAccount", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "3", "type": "t_address", "astId": 2140, "label": "head", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "4", "type": "t_address", "astId": 2143, "label": "tail", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "5", "type": "t_address", "astId": 2145, "label": "masterCreditAccount", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "6", "type": "t_struct(AddressSet)1496_storage", "astId": 2147, "label": "creditAccountsSet", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "8", "type": "t_array(t_struct(MiningApproval)4565_storage)dyn_storage", "astId": 2150, "label": "miningApprovals", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "9", "type": "t_contract(ContractsRegister)3299", "astId": 2152, "label": "_contractsRegister", "offset": 0, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}, {"slot": "9", "type": "t_bool", "astId": 2154, "label": "isMiningFinished", "offset": 20, "contract": "contracts/core/AccountFactory.sol:AccountFactory"}]}}